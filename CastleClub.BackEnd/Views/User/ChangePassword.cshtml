@model CastleClub.BackEnd.Models.ResetPasswordVM
@{
    Layout = null;
}

<div id="changePasswordDiv" title="Change password">
    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { id="changePasswordForm" }))
    {
        @Html.AntiForgeryToken()
        <table>
            <tbody>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.CurrentPassword)</td>
                    <td>@Html.PasswordFor(m => m.CurrentPassword)</td>
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(m => m.NewPassword)</td>
                    <td>@Html.PasswordFor(m => m.NewPassword)</td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" id="changePasswordBtn" style="display:none">
                    </td>
                </tr>
            </tbody>
        </table>
    }
</div>

<script type="text/javascript">
    $("#changePasswordForm").submit(function (event) {
        $that = $(this);
        var data = $that.serialize();
        event.stopPropagation();
        event.preventDefault();
        $.ajax({
            type: "POST",
            url: $that.attr("action"),
            data: data,
            success: function (data) {
                if (data == "True") {
                    CloseChangePasswordDlg();
                }
                else {
                    $("#CurrentPassword").addClass("input-validation-error");
                    $("#NewPassword").addClass("input-validation-error");
                }
            }
        });

        return false;
    })

    function ResetChangePasswordForm() {
        $("#CurrentPassword").val('');
        $("#CurrentPasword").removeClass("input-validation-error");
        $("#NewPassword").val('');
        $("#NewPassword").removeClass("input-validation-error");
        $("#trError").css("display", "none");
    }
</script>

